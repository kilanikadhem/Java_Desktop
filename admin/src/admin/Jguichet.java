/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Window;
import java.beans.Beans;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Locale;
import javax.persistence.RollbackException;
import javax.swing.JFrame;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.JPanel;

/**
 *
 * @author kadhem
 */
public class Jguichet extends JPanel {
    
    public Jguichet() {
        initComponents();
        if (!Beans.isDesignTime()) {
            entityManager.getTransaction().begin();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("adminPU").createEntityManager();
        query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT g FROM Guichet g");
        list = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(query.getResultList());
        masterScrollPane = new javax.swing.JScrollPane();
        masterTable = new javax.swing.JTable();
        numGuichetLabel = new javax.swing.JLabel();
        clientActLabel = new javax.swing.JLabel();
        etatLabel = new javax.swing.JLabel();
        numGuichetField = new javax.swing.JTextField();
        clientActField = new javax.swing.JTextField();
        etatField = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        refreshButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        FormListener formListener = new FormListener();

        setLayout(null);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, list, masterTable);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${idGuichet}"));
        columnBinding.setColumnName("Id Guichet");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${numGuichet}"));
        columnBinding.setColumnName("Num Guichet");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${clientAct}"));
        columnBinding.setColumnName("Client Act");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${etat}"));
        columnBinding.setColumnName("Etat");
        columnBinding.setColumnClass(Integer.class);
        bindingGroup.addBinding(jTableBinding);

        masterScrollPane.setViewportView(masterTable);

        add(masterScrollPane);
        masterScrollPane.setBounds(133, 88, 440, 190);

        numGuichetLabel.setText("Num Guichet:");
        add(numGuichetLabel);
        numGuichetLabel.setBounds(10, 330, 64, 14);

        clientActLabel.setText("Client Act:");
        add(clientActLabel);
        clientActLabel.setBounds(20, 370, 50, 14);

        etatLabel.setText("Etat:");
        add(etatLabel);
        etatLabel.setBounds(50, 410, 24, 14);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.numGuichet}"), numGuichetField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), numGuichetField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        numGuichetField.addActionListener(formListener);
        add(numGuichetField);
        numGuichetField.setBounds(80, 330, 495, 30);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.clientAct}"), clientActField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), clientActField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        clientActField.addActionListener(formListener);
        add(clientActField);
        clientActField.setBounds(80, 370, 495, 30);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.etat}"), etatField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setSourceUnreadableValue("null");
        bindingGroup.addBinding(binding);
        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), etatField, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        add(etatField);
        etatField.setBounds(80, 410, 495, 30);

        saveButton.setText("Enregistrer");
        saveButton.addActionListener(formListener);
        add(saveButton);
        saveButton.setBounds(530, 450, 90, 23);

        refreshButton.setText("Actualiser");
        refreshButton.addActionListener(formListener);
        add(refreshButton);
        refreshButton.setBounds(440, 450, 79, 23);

        newButton.setText("Ajouter");
        newButton.addActionListener(formListener);
        add(newButton);
        newButton.setBounds(270, 450, 71, 23);

        deleteButton.setText("Effacer");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, masterTable, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), deleteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        deleteButton.addActionListener(formListener);
        add(deleteButton);
        deleteButton.setBounds(360, 450, 71, 23);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/finances2.png"))); // NOI18N
        add(jLabel5);
        jLabel5.setBounds(10, 10, 120, 73);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/fianances.png"))); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(10, 100, 113, 143);

        jLabel2.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Recette des finances Av. Med. Mâarouf ");
        add(jLabel2);
        jLabel2.setBounds(190, 20, 306, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("القباضـة الماليّـة شارع محمّد معروف بسوســة");
        jLabel6.setToolTipText("");
        add(jLabel6);
        jLabel6.setBounds(210, 40, 259, 15);
        add(jSeparator1);
        jSeparator1.setBounds(150, 60, 410, 10);

        DateFormat dateFormat = new SimpleDateFormat("ddMMMyyyy",Locale.FRANCE);
        Calendar cal = Calendar.getInstance();
        String s=dateFormat.format(cal.getTime());
        jLabel3.setText(s);
        add(jLabel3);
        jLabel3.setBounds(10, 450, 210, 14);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/META-INF/1458320500_Home01.png"))); // NOI18N
        jButton1.addActionListener(formListener);
        add(jButton1);
        jButton1.setBounds(540, 10, 65, 41);

        bindingGroup.bind();
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener {
        FormListener() {}
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == numGuichetField) {
                Jguichet.this.numGuichetFieldActionPerformed(evt);
            }
            else if (evt.getSource() == clientActField) {
                Jguichet.this.clientActFieldActionPerformed(evt);
            }
            else if (evt.getSource() == saveButton) {
                Jguichet.this.saveButtonActionPerformed(evt);
            }
            else if (evt.getSource() == refreshButton) {
                Jguichet.this.refreshButtonActionPerformed(evt);
            }
            else if (evt.getSource() == newButton) {
                Jguichet.this.newButtonActionPerformed(evt);
            }
            else if (evt.getSource() == deleteButton) {
                Jguichet.this.deleteButtonActionPerformed(evt);
            }
            else if (evt.getSource() == jButton1) {
                Jguichet.this.jButton1ActionPerformed(evt);
            }
        }
    }// </editor-fold>//GEN-END:initComponents

    
    @SuppressWarnings("unchecked")
    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        entityManager.getTransaction().rollback();
        entityManager.getTransaction().begin();
        java.util.Collection data = query.getResultList();
        for (Object entity : data) {
            entityManager.refresh(entity);
        }
        list.clear();
        list.addAll(data);
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        int[] selected = masterTable.getSelectedRows();
        List<entity.Guichet> toRemove = new ArrayList<entity.Guichet>(selected.length);
        for (int idx = 0; idx < selected.length; idx++) {
            entity.Guichet g = list.get(masterTable.convertRowIndexToModel(selected[idx]));
            toRemove.add(g);
            entityManager.remove(g);
        }
        list.removeAll(toRemove);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        entity.Guichet g = new entity.Guichet();
        entityManager.persist(g);
        list.add(g);
        int row = list.size() - 1;
        masterTable.setRowSelectionInterval(row, row);
        masterTable.scrollRectToVisible(masterTable.getCellRect(row, 0, true));
    }//GEN-LAST:event_newButtonActionPerformed
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
       if((numGuichetField.getText().length()!=0) && (clientActField.getText().length()!=0)&& (etatField.getText().length()!=0)){
           try { 
int i = Integer.parseInt(numGuichetField.getText()); 

} 
catch (Exception e) { showMessageDialog(null, "verifer que le numero du guichet est un entier");

}
       
        try {
            entityManager.getTransaction().commit();
            entityManager.getTransaction().begin();
        } catch (RollbackException rex) {
            rex.printStackTrace();
            entityManager.getTransaction().begin();
            List<entity.Guichet> merged = new ArrayList<entity.Guichet>(list.size());
            for (entity.Guichet g : list) {
                merged.add(entityManager.merge(g));
            }
            list.clear();
            list.addAll(merged);
        }}
       else{ showMessageDialog(null, "Tous les champs sont obligatoire");}
    }//GEN-LAST:event_saveButtonActionPerformed

    private void clientActFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clientActFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clientActFieldActionPerformed

    private void numGuichetFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numGuichetFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numGuichetFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JPrincipale p=new JPrincipale();
       
        p.getContentPane().setPreferredSize(new Dimension(650,400));
        p.pack();
        p.setVisible(true);
        p.setLocationRelativeTo(null);
        

    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField clientActField;
    private javax.swing.JLabel clientActLabel;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JTextField etatField;
    private javax.swing.JLabel etatLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private java.util.List<entity.Guichet> list;
    private javax.swing.JScrollPane masterScrollPane;
    private javax.swing.JTable masterTable;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField numGuichetField;
    private javax.swing.JLabel numGuichetLabel;
    private javax.persistence.Query query;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton saveButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jguichet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jguichet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jguichet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jguichet.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame frame = new JFrame();
                frame.setContentPane(new Jguichet());
                frame.pack();
                frame.setVisible(true);
                frame.dispose();
                
            }
        });
    }
    
}
